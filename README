			LazyCat

LazyCat is a configuration management system.  It is on the early
stages of development, but already can do some useful work.

LazyCat is distributed under the terms of GNU GPLv3 license or (at
your option) any later version. See COPYING for details.

For information about open issues and ideas about development of the
project see TODO file.

	ARCHITECTURE

LazyCat consists of the four main parts: UI, daemon, proxies and
optional clients that are running on hosts (see figure 1.1 below).

Currently there are two user interfaces:
 - lazycat-gtk (GTK)
 - lc (CLI)

Proxies are processes which are used by the lazycat-daemon to send
messages through computer network.

	+--------------------------------------------+
	| UI                                         |
        +--------------------------------------------+
                               ^
                               |  Unix socket
                               v
	+--------------------------------------------+
	| lazycat-daemon                             |
	+--------------------------------------------+
	          ^                        ^
	          |      Unix sockets      |
	          v                        v
	+-------------------+    +-------------------+
	| proxy             |    | proxy             |
	+-------------------+    +-------------------+
	          ^                        ^
	..........|.........Network........|..........
	          v                        v
	+-------------------+    +-------------------+
	| host              |    | host              |
	+-------------------+    +-------------------+

	figure 1.1: LazyCat architecture


Currently LazyCat shipped with TCP and SSH proxy. It is not
recommended to use TCP proxy in the real tasks because it hasn't got
any authentification mechanism yet, and sends data as unencrypted text
streams.

SSH proxy uses authorisation based on public keys. To use this proxy
you must have SSH daemon running on the every host.

The private/public key names are hardcoded for now: they are
~/.ssh/lazycat and ~/.ssh/lazycat.pub respectively.

	USAGE EXAMPLE

First of all, you have to start the daemon:

  $ lazycat-daemon

Then you can add hosts to be able to manage them:

  $ lc add home-network lazy-pc1 ssh-proxy "avp@pc1:22" \
      "A lazy computer"

You can get list of hosts with "list" command:

  $ lc list hosts

Hosts are addressed by their IDs.  For example, to send command to a
concrete host, you can pass its ID to the "exec" command.  Say you
want to send "uname -a" to the host with ID 2 :

  $ lc exec -n 2 "uname -a"

If you don't specify a host ID, a command will be sent to all the
accessible hosts:

  $ lc exec "uname -a"

It's possible to compare outputs from hosts with output from the
master host.  In other words, you'll get only diff between different
outputs instead of full output from the every host.

Set master host:

  $ lc set master 5

Get output from the master host:

  $ lc diff --get-pattern "uname -a"

Check the output.  If it's OK, continue the operation:

  $ lc diff --continue

If something went wrong, you can abort the operation:

  $ lc diff --abort

All commands have short documentation and usage examples.  Use "-h"
key to get help:

  $ lc -h
  $ lc exec -h
